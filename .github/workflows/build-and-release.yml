name: Build and Post Github Releases
on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
      - uses: actions/checkout@v3
      - name: Run Tests
        run: cargo test --verbose

  build-linux:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
      - uses: actions/checkout@v3
      - name: Build Linux
        run: cargo build --verbose --release --target x86_64-unknown-linux-gnu
      - name: Copy Assets folder to target dir
        run: cp -r assets target/x86_64-unknown-linux-gnu/release/
      - name: Copy to Current Dir
        run: cp -r target/x86_64-unknown-linux-gnu/release linux-latest  
      - name: Zip
        run: zip -D -r linux-latest.zip linux-latest/*
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-latest
          path: linux-latest.zip
          retention-days: 2
            
  build-windows:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Install alsa and udev and mingw
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev mingw-w64
      - uses: actions/checkout@v3
      - name: Add windows target to Rust
        run: rustup target add x86_64-pc-windows-gnu
      - name: Build Windows
        run: cargo build --verbose --release --target x86_64-pc-windows-gnu
      - name: Copy Assets folder to target dir
        run: cp -r assets target/x86_64-pc-windows-gnu/release/
      - name: Copy to Current Dir
        run: cp -r target/x86_64-pc-windows-gnu/release windows-latest  
      - name: Zip
        run: zip -D -r windows-latest.zip windows-latest/*
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-latest
          path: windows-latest.zip
          retention-days: 2

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - build-linux 

    steps:
      - uses: actions/checkout@v3
      - name: Download Linux Build
        uses: actions/download-artifact@v3
        with:
          name: linux-latest
      - name: Delete Previous Release
        run: gh release delete latest -y
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Tag
        run: git tag latest -f && git push --tags -f
      - name: Create release
        run: gh release create latest linux-latest.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
